
hello = 1
variable = other
id = fn x => x
one = id 1
zero = case cofn x => x {
    | inl x => 0
    | inr f => f @ 1
}
unit = ()
function = fn parameter => ()
const = fn x => fn y => x
cofunction = cofn parameter => ()
two = case inl 2 {
    | inl x => x
    | inr x => x
}
left = inl 1
right = inr 1
debug!(case cofn x => x {
    | inl x => 0
    | inr f => f @ 1
})

S = fn x => fn y => fn z => (x z) (y z)
K = fn x => fn y => x
I = fn x => x

coS = cofn x => cofn y => cofn z => (x @ y) @ (y @ z)
coK = cofn x => cofn y => x 
coI = cofn x => x 
